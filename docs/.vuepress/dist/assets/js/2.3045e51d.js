(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{53:function(t,s,e){"use strict";e.r(s);var a=e(0),n=Object(a.a)({},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("div",{staticClass:"content"},[t._m(0),t._m(1),e("p",[t._v("d3.js你看成是svg的jQuery就行了。d3.js的所有操作都是真实的dom操作，这和React的vdom完全是两个思路。当然，d3.js也有可以先计算节点属性，最后挂上dom树的用法，只不过不常用。操作SVG dom并不是什么了不起的，任何前端程序员操作都可以再短时间内学会操作SVG。jQuery式的操作，在今天也不是什么先进的东西。更何况d3的选择器，在我看来，并不是最适合它的交互方式。d3厉害的地方在于它建立了一整套数据到SVG属性的计算框架，常用Data visualization模型，大多都可以再d3.layout里面找到，你常用的几何图形，在d3.svg里面都有。它为不理解SVG属性计算公式的程序员提供了一整套工具包，让你可以轻松的把数据转换成你想要的SVG属性。而不用把精力耗费在学习如何生成一条path之类的事情上。现在看来，组件化可以解决HTML排版的很多问题，当然也可以解决SVG排版的问题。但是，d3作为无数组Data Visualization库的基础，已经太大而不能转型了。但是你结合d3核心的数学处理模块和最新的组件化框架，很容易就可以做出复用性和易用性都很高的SVG组件。")]),e("p",[t._v("作者：Twiknight\n链接：https://www.zhihu.com/question/38648735/answer/77400803\n来源：知乎\n著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。")]),e("p",[t._v(t._s(t.$page))]),t._m(2),e("p",[e("code",[t._v("sss")]),e("demo-one")],1),t._m(3),e("p",[t._v("🎉 💯")]),e("p"),t._m(4),e("p"),t._m(5),t._m(6),t._m(7)])},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"hello-vuepress"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hello-vuepress","aria-hidden":"true"}},[this._v("#")]),this._v(" Hello VuePress")])},function(){var t=this.$createElement,s=this._self._c||t;return s("blockquote",[s("p",[this._v("第一个VuePress MD文件")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{pre:!0},[s("p",[s("code",[this._v("{{sssss}}")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"eadme-md"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#eadme-md","aria-hidden":"true"}},[this._v("#")]),this._v(" EADME.md")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"table-of-contents"},[s("ul")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("TIP")]),s("p",[this._v("This is a tip")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{attrs:{class:"token keyword"}},[t._v("export")]),t._v(" "),e("span",{attrs:{class:"token keyword"}},[t._v("default")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),e("span",{attrs:{class:"token function"}},[t._v("data")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),e("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),e("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),e("span",{attrs:{class:"highlighted-line"}},[t._v("      msg"),e("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{attrs:{class:"token string"}},[t._v("'Highlighted!'")])]),t._v("    "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),e("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])},function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("table",[e("thead",[e("tr",[e("th",[t._v("Tables")]),e("th",{staticStyle:{"text-align":"center"}},[t._v("Are")]),e("th",{staticStyle:{"text-align":"right"}},[t._v("Cool")])])]),e("tbody",[e("tr",[e("td",[t._v("col 3 is")]),e("td",{staticStyle:{"text-align":"center"}},[t._v("right-aligned")]),e("td",{staticStyle:{"text-align":"right"}},[t._v("$1600")])]),e("tr",[e("td",[t._v("col 2 is")]),e("td",{staticStyle:{"text-align":"center"}},[t._v("centered")]),e("td",{staticStyle:{"text-align":"right"}},[t._v("$12")])]),e("tr",[e("td",[t._v("zebra stripes")]),e("td",{staticStyle:{"text-align":"center"}},[t._v("are neat")]),e("td",{staticStyle:{"text-align":"right"}},[t._v("$1")])])])])}],!1,null,null,null);s.default=n.exports}}]);